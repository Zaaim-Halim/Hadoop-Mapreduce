package zaaim.halim;

import java.io.IOException;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

public class MutationMapper extends Mapper<LongWritable,Text,Text,IntWritable>{
	private final static IntWritable one = new IntWritable(1);
	private Text word = new Text();

	public void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException {
		String line = value.toString().trim();
		char[] lineChars = line.toString().toCharArray();
  
		for (int i = 0 ; i <lineChars.length; i++) {
			String type = lineChars[i]+"";
			String mutation = null;
			switch(type.trim())
			{
			 case "A":
				 mutation = "AAA";
				 if(mutation.equals(line.substring(i, i+2)))
					 word.set(mutation+i);
				 break;
			 case "C":
				 mutation = "CCCC";
				 if(mutation.equals(line.substring(i, i+3)))
					 word.set(mutation+i);
				 
				 break;
			 case "G":
				 mutation = "GGGG";
				 if(mutation.equals(line.substring(i, i+3)))
					 word.set(mutation+i);
			      break;
			 case "T":
				 mutation = "TTT";
				 if(mutation.equals(line.substring(i, i+2)))
					 word.set(mutation+i);
				 break;
			 default:
				 break;
				
			}
            
         	context.write(word, one);
		}
            
	}

}
